# .coveralls.yml

# ... (existing 'threshold' and 'pull_request' configurations) ...

threshold:
  percentage: 70
  partial_percentage: 80

pull_request:
  comment_on_success: true
  comment_on_failure: true

# Define custom groups for your monorepo structure
# Each entry under 'groups:' is a new group/team
groups:
  # Example Group 1: Core Development Team
  "Core Team":
    # List patterns for directories/files that belong to this group
    - python_v2/my_library/**/* # All files within python_v2/my_library
    - schedulers/simple_job_scheduler/**/* # All files within schedulers/simple_job_scheduler

  # Example Group 2: Scripting Team
  "Scripting Team":
    - scripts_v2/my_script/**/* # All files within scripts_v2/my_script

  # Example Group 3: Services Team
  "Services Team":
    - services/reporting_service/**/* # All files within services/reporting_service
    # If you have other services, add their paths here:
    # - services/another_service/**/*
    # - services/email_service/**/*

  # You can define a 'Rest of the Project' group for anything not explicitly grouped
  "Other Components":
    - "**/*" # Matches all files
    # Exclude files already covered by other groups
    # - '!python_v2/my_library/**/*'
    # - '!schedulers/simple_job_scheduler/**/*'
    # ... and so on for all other groups you defined
    # It's often easier to define groups for specific parts and rely on default file view for the rest.

# If you only want to track coverage for specific files, use 'source_files'
# Otherwise, coveralls will automatically find all python files in the repo
# source_files:
#   - python_v2/**/*.py
#   - schedulers/**/*.py
#   - scripts_v2/**/*.py
#   - services/**/*.py
#   - '!*/tests/*' # Exclude test files from being reported as source files